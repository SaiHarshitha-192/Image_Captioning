# -*- coding: utf-8 -*-
"""8k_KerasOCR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g9Y0I4G7ZIH6M9deV9n0G0nmxE6FnqXE
"""

from google.colab import drive
drive.mount('/content/drive')

import os

!pip install -q keras-ocr

import keras_ocr
import matplotlib.pyplot as plt

# Path to the directory containing the Flickr8k images
flickr8k_images_dir = '/content/drive/MyDrive/major_project/8k/harshi/Images'

# Path to the directory where you want to save the extracted text
output_dir = '/content/drive/MyDrive/major_project/8k/harshi/flickr8k_harshi_text'

# Function to extract text from an image using OCR
pipeline = keras_ocr.pipeline.Pipeline()
def extract_text_from_image(image_path):
    #image = Image.open(image_path)
    #text = pytesseract.image_to_string(image)
    print(image_path)
    images = [keras_ocr.tools.read(img) for img in [image_path, ]]
    # predicted_image = pipeline.recognize(images)
    prediction_groups = pipeline.recognize(images)

    predicted_image = prediction_groups[0]
    p=[]

    for text, box in predicted_image:
        p.append(text)
        #print(text)
    return p

# Function to save the extracted text to a text file
def save_text_to_file(text2, image_filename):
    txt_filename = os.path.splitext(image_filename)[0] + ".txt"
    # with open(os.path.join(output_dir, txt_filename), "w") as f:
    #     f.write(text)
    with open(os.path.join(output_dir, txt_filename), "w") as f:
      # Iterate over the elements of the list
      for element in text2:
          # Write each element to the file, followed by a newline character
          f.write(element + "\n")

def text_file_exists(image_filename):
    txt_filename = os.path.splitext(image_filename)[0] + ".txt"
    return os.path.exists(os.path.join(output_dir, txt_filename))

# Iterate through each image in the Flickr8k dataset and extract text
for filename in os.listdir(flickr8k_images_dir):
    if filename.endswith(".jpg"):
        image_path = os.path.join(flickr8k_images_dir, filename)
        if not text_file_exists(filename):
          text1 = extract_text_from_image(image_path)
          text_list=[]
          for sublist in text1:
            text_list.append(sublist)
          # Print the resulting list of text
          print(text_list)
          save_text_to_file(text_list, filename)
        else:
          print('already extracted')
          continue

text_files_dir = '/content/drive/MyDrive/major_project/8k/harshi/flickr8k_harshi_text'
images = os.listdir(text_files_dir)
print(len(images))

'''# Path to the directory containing the extracted text files
text_files_dir = '/content/drive/MyDrive/major_project/8k/harshi/flickr8k_harshi_text'

# Function to read text from text files and print if not "FF"
def print_text_from_files(text_files_dir):
    for filename in os.listdir(text_files_dir):
        if filename.endswith(".txt"):
            text_file_path = os.path.join(text_files_dir, filename)
            with open(text_file_path, "r") as file:
                extracted_text = file.read().strip()
                print(f"Text from {filename}: {extracted_text}")

# Print text from text files if not "FF"
print_text_from_files(text_files_dir)
'''

# !pip install -q keras-ocr
# import keras_ocr
# import matplotlib.pyplot as plt
# pipeline = keras_ocr.pipeline.Pipeline()
# images = [
#     keras_ocr.tools.read(img) for img in ['/content/Image1.png',
#                                           '/content/Image2.png',]
# ]
# prediction_groups = pipeline.recognize(images)
# fig, axs = plt.subplots(nrows=len(images), figsize=(10, 20))
# for ax, image, predictions in zip(axs, images, prediction_groups):
#     keras_ocr.tools.drawAnnotations(image=image,
#                                     predictions=predictions,
#                                     ax=ax)
# predicted_image = prediction_groups[1]
# for text, box in predicted_image:
#     print(text)

